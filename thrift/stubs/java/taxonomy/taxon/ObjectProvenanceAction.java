/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.TreeSet;
import java.util.TreeMap;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
/**
 * @skip documentation
 */
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-4-20")
public class ObjectProvenanceAction implements org.apache.thrift.TBase<ObjectProvenanceAction, ObjectProvenanceAction._Fields>, java.io.Serializable, Cloneable, Comparable<ObjectProvenanceAction> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ObjectProvenanceAction");

  private static final org.apache.thrift.protocol.TField TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("time", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField SERVICE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("service_name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField SERVICE_VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("service_version", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField SERVICE_METHOD_FIELD_DESC = new org.apache.thrift.protocol.TField("service_method", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField METHOD_PARAMETERS_FIELD_DESC = new org.apache.thrift.protocol.TField("method_parameters", org.apache.thrift.protocol.TType.LIST, (short)5);
  private static final org.apache.thrift.protocol.TField SCRIPT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("script_name", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField SCRIPT_VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("script_version", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField SCRIPT_COMMAND_LINE_FIELD_DESC = new org.apache.thrift.protocol.TField("script_command_line", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField INPUT_OBJECT_REFERENCES_FIELD_DESC = new org.apache.thrift.protocol.TField("input_object_references", org.apache.thrift.protocol.TType.LIST, (short)9);
  private static final org.apache.thrift.protocol.TField VALIDATED_OBJECT_REFERENCES_FIELD_DESC = new org.apache.thrift.protocol.TField("validated_object_references", org.apache.thrift.protocol.TType.LIST, (short)10);
  private static final org.apache.thrift.protocol.TField INTERMEDIATE_INPUT_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("intermediate_input_ids", org.apache.thrift.protocol.TType.LIST, (short)11);
  private static final org.apache.thrift.protocol.TField INTERMEDIATE_OUTPUT_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("intermediate_output_ids", org.apache.thrift.protocol.TType.LIST, (short)12);
  private static final org.apache.thrift.protocol.TField EXTERNAL_DATA_FIELD_DESC = new org.apache.thrift.protocol.TField("external_data", org.apache.thrift.protocol.TType.LIST, (short)13);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)14);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ObjectProvenanceActionStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ObjectProvenanceActionTupleSchemeFactory());
  }

  public String time; // required
  public String service_name; // required
  public String service_version; // required
  public String service_method; // required
  public List<ByteBuffer> method_parameters; // required
  public String script_name; // required
  public String script_version; // required
  public String script_command_line; // required
  public List<String> input_object_references; // required
  public List<String> validated_object_references; // required
  public List<String> intermediate_input_ids; // required
  public List<String> intermediate_output_ids; // required
  public List<ExternalDataUnit> external_data; // required
  public String description; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    TIME((short)1, "time"),
    SERVICE_NAME((short)2, "service_name"),
    SERVICE_VERSION((short)3, "service_version"),
    SERVICE_METHOD((short)4, "service_method"),
    METHOD_PARAMETERS((short)5, "method_parameters"),
    SCRIPT_NAME((short)6, "script_name"),
    SCRIPT_VERSION((short)7, "script_version"),
    SCRIPT_COMMAND_LINE((short)8, "script_command_line"),
    INPUT_OBJECT_REFERENCES((short)9, "input_object_references"),
    VALIDATED_OBJECT_REFERENCES((short)10, "validated_object_references"),
    INTERMEDIATE_INPUT_IDS((short)11, "intermediate_input_ids"),
    INTERMEDIATE_OUTPUT_IDS((short)12, "intermediate_output_ids"),
    EXTERNAL_DATA((short)13, "external_data"),
    DESCRIPTION((short)14, "description");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TIME
          return TIME;
        case 2: // SERVICE_NAME
          return SERVICE_NAME;
        case 3: // SERVICE_VERSION
          return SERVICE_VERSION;
        case 4: // SERVICE_METHOD
          return SERVICE_METHOD;
        case 5: // METHOD_PARAMETERS
          return METHOD_PARAMETERS;
        case 6: // SCRIPT_NAME
          return SCRIPT_NAME;
        case 7: // SCRIPT_VERSION
          return SCRIPT_VERSION;
        case 8: // SCRIPT_COMMAND_LINE
          return SCRIPT_COMMAND_LINE;
        case 9: // INPUT_OBJECT_REFERENCES
          return INPUT_OBJECT_REFERENCES;
        case 10: // VALIDATED_OBJECT_REFERENCES
          return VALIDATED_OBJECT_REFERENCES;
        case 11: // INTERMEDIATE_INPUT_IDS
          return INTERMEDIATE_INPUT_IDS;
        case 12: // INTERMEDIATE_OUTPUT_IDS
          return INTERMEDIATE_OUTPUT_IDS;
        case 13: // EXTERNAL_DATA
          return EXTERNAL_DATA;
        case 14: // DESCRIPTION
          return DESCRIPTION;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TIME, new org.apache.thrift.meta_data.FieldMetaData("time", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SERVICE_NAME, new org.apache.thrift.meta_data.FieldMetaData("service_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SERVICE_VERSION, new org.apache.thrift.meta_data.FieldMetaData("service_version", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SERVICE_METHOD, new org.apache.thrift.meta_data.FieldMetaData("service_method", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.METHOD_PARAMETERS, new org.apache.thrift.meta_data.FieldMetaData("method_parameters", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING            , true))));
    tmpMap.put(_Fields.SCRIPT_NAME, new org.apache.thrift.meta_data.FieldMetaData("script_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SCRIPT_VERSION, new org.apache.thrift.meta_data.FieldMetaData("script_version", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SCRIPT_COMMAND_LINE, new org.apache.thrift.meta_data.FieldMetaData("script_command_line", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.INPUT_OBJECT_REFERENCES, new org.apache.thrift.meta_data.FieldMetaData("input_object_references", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.VALIDATED_OBJECT_REFERENCES, new org.apache.thrift.meta_data.FieldMetaData("validated_object_references", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.INTERMEDIATE_INPUT_IDS, new org.apache.thrift.meta_data.FieldMetaData("intermediate_input_ids", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.INTERMEDIATE_OUTPUT_IDS, new org.apache.thrift.meta_data.FieldMetaData("intermediate_output_ids", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.EXTERNAL_DATA, new org.apache.thrift.meta_data.FieldMetaData("external_data", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ExternalDataUnit.class))));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ObjectProvenanceAction.class, metaDataMap);
  }

  public ObjectProvenanceAction() {
  }

  public ObjectProvenanceAction(
    String time,
    String service_name,
    String service_version,
    String service_method,
    List<ByteBuffer> method_parameters,
    String script_name,
    String script_version,
    String script_command_line,
    List<String> input_object_references,
    List<String> validated_object_references,
    List<String> intermediate_input_ids,
    List<String> intermediate_output_ids,
    List<ExternalDataUnit> external_data,
    String description)
  {
    this();
    this.time = time;
    this.service_name = service_name;
    this.service_version = service_version;
    this.service_method = service_method;
    this.method_parameters = method_parameters;
    this.script_name = script_name;
    this.script_version = script_version;
    this.script_command_line = script_command_line;
    this.input_object_references = input_object_references;
    this.validated_object_references = validated_object_references;
    this.intermediate_input_ids = intermediate_input_ids;
    this.intermediate_output_ids = intermediate_output_ids;
    this.external_data = external_data;
    this.description = description;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ObjectProvenanceAction(ObjectProvenanceAction other) {
    if (other.isSetTime()) {
      this.time = other.time;
    }
    if (other.isSetService_name()) {
      this.service_name = other.service_name;
    }
    if (other.isSetService_version()) {
      this.service_version = other.service_version;
    }
    if (other.isSetService_method()) {
      this.service_method = other.service_method;
    }
    if (other.isSetMethod_parameters()) {
      List<ByteBuffer> __this__method_parameters = new ArrayList<ByteBuffer>(other.method_parameters);
      this.method_parameters = __this__method_parameters;
    }
    if (other.isSetScript_name()) {
      this.script_name = other.script_name;
    }
    if (other.isSetScript_version()) {
      this.script_version = other.script_version;
    }
    if (other.isSetScript_command_line()) {
      this.script_command_line = other.script_command_line;
    }
    if (other.isSetInput_object_references()) {
      List<String> __this__input_object_references = new ArrayList<String>(other.input_object_references);
      this.input_object_references = __this__input_object_references;
    }
    if (other.isSetValidated_object_references()) {
      List<String> __this__validated_object_references = new ArrayList<String>(other.validated_object_references);
      this.validated_object_references = __this__validated_object_references;
    }
    if (other.isSetIntermediate_input_ids()) {
      List<String> __this__intermediate_input_ids = new ArrayList<String>(other.intermediate_input_ids);
      this.intermediate_input_ids = __this__intermediate_input_ids;
    }
    if (other.isSetIntermediate_output_ids()) {
      List<String> __this__intermediate_output_ids = new ArrayList<String>(other.intermediate_output_ids);
      this.intermediate_output_ids = __this__intermediate_output_ids;
    }
    if (other.isSetExternal_data()) {
      List<ExternalDataUnit> __this__external_data = new ArrayList<ExternalDataUnit>(other.external_data.size());
      for (ExternalDataUnit other_element : other.external_data) {
        __this__external_data.add(new ExternalDataUnit(other_element));
      }
      this.external_data = __this__external_data;
    }
    if (other.isSetDescription()) {
      this.description = other.description;
    }
  }

  public ObjectProvenanceAction deepCopy() {
    return new ObjectProvenanceAction(this);
  }

  @Override
  public void clear() {
    this.time = null;
    this.service_name = null;
    this.service_version = null;
    this.service_method = null;
    this.method_parameters = null;
    this.script_name = null;
    this.script_version = null;
    this.script_command_line = null;
    this.input_object_references = null;
    this.validated_object_references = null;
    this.intermediate_input_ids = null;
    this.intermediate_output_ids = null;
    this.external_data = null;
    this.description = null;
  }

  public String getTime() {
    return this.time;
  }

  public ObjectProvenanceAction setTime(String time) {
    this.time = time;
    return this;
  }

  public void unsetTime() {
    this.time = null;
  }

  /** Returns true if field time is set (has been assigned a value) and false otherwise */
  public boolean isSetTime() {
    return this.time != null;
  }

  public void setTimeIsSet(boolean value) {
    if (!value) {
      this.time = null;
    }
  }

  public String getService_name() {
    return this.service_name;
  }

  public ObjectProvenanceAction setService_name(String service_name) {
    this.service_name = service_name;
    return this;
  }

  public void unsetService_name() {
    this.service_name = null;
  }

  /** Returns true if field service_name is set (has been assigned a value) and false otherwise */
  public boolean isSetService_name() {
    return this.service_name != null;
  }

  public void setService_nameIsSet(boolean value) {
    if (!value) {
      this.service_name = null;
    }
  }

  public String getService_version() {
    return this.service_version;
  }

  public ObjectProvenanceAction setService_version(String service_version) {
    this.service_version = service_version;
    return this;
  }

  public void unsetService_version() {
    this.service_version = null;
  }

  /** Returns true if field service_version is set (has been assigned a value) and false otherwise */
  public boolean isSetService_version() {
    return this.service_version != null;
  }

  public void setService_versionIsSet(boolean value) {
    if (!value) {
      this.service_version = null;
    }
  }

  public String getService_method() {
    return this.service_method;
  }

  public ObjectProvenanceAction setService_method(String service_method) {
    this.service_method = service_method;
    return this;
  }

  public void unsetService_method() {
    this.service_method = null;
  }

  /** Returns true if field service_method is set (has been assigned a value) and false otherwise */
  public boolean isSetService_method() {
    return this.service_method != null;
  }

  public void setService_methodIsSet(boolean value) {
    if (!value) {
      this.service_method = null;
    }
  }

  public int getMethod_parametersSize() {
    return (this.method_parameters == null) ? 0 : this.method_parameters.size();
  }

  public java.util.Iterator<ByteBuffer> getMethod_parametersIterator() {
    return (this.method_parameters == null) ? null : this.method_parameters.iterator();
  }

  public void addToMethod_parameters(ByteBuffer elem) {
    if (this.method_parameters == null) {
      this.method_parameters = new ArrayList<ByteBuffer>();
    }
    this.method_parameters.add(elem);
  }

  public List<ByteBuffer> getMethod_parameters() {
    return this.method_parameters;
  }

  public ObjectProvenanceAction setMethod_parameters(List<ByteBuffer> method_parameters) {
    this.method_parameters = method_parameters;
    return this;
  }

  public void unsetMethod_parameters() {
    this.method_parameters = null;
  }

  /** Returns true if field method_parameters is set (has been assigned a value) and false otherwise */
  public boolean isSetMethod_parameters() {
    return this.method_parameters != null;
  }

  public void setMethod_parametersIsSet(boolean value) {
    if (!value) {
      this.method_parameters = null;
    }
  }

  public String getScript_name() {
    return this.script_name;
  }

  public ObjectProvenanceAction setScript_name(String script_name) {
    this.script_name = script_name;
    return this;
  }

  public void unsetScript_name() {
    this.script_name = null;
  }

  /** Returns true if field script_name is set (has been assigned a value) and false otherwise */
  public boolean isSetScript_name() {
    return this.script_name != null;
  }

  public void setScript_nameIsSet(boolean value) {
    if (!value) {
      this.script_name = null;
    }
  }

  public String getScript_version() {
    return this.script_version;
  }

  public ObjectProvenanceAction setScript_version(String script_version) {
    this.script_version = script_version;
    return this;
  }

  public void unsetScript_version() {
    this.script_version = null;
  }

  /** Returns true if field script_version is set (has been assigned a value) and false otherwise */
  public boolean isSetScript_version() {
    return this.script_version != null;
  }

  public void setScript_versionIsSet(boolean value) {
    if (!value) {
      this.script_version = null;
    }
  }

  public String getScript_command_line() {
    return this.script_command_line;
  }

  public ObjectProvenanceAction setScript_command_line(String script_command_line) {
    this.script_command_line = script_command_line;
    return this;
  }

  public void unsetScript_command_line() {
    this.script_command_line = null;
  }

  /** Returns true if field script_command_line is set (has been assigned a value) and false otherwise */
  public boolean isSetScript_command_line() {
    return this.script_command_line != null;
  }

  public void setScript_command_lineIsSet(boolean value) {
    if (!value) {
      this.script_command_line = null;
    }
  }

  public int getInput_object_referencesSize() {
    return (this.input_object_references == null) ? 0 : this.input_object_references.size();
  }

  public java.util.Iterator<String> getInput_object_referencesIterator() {
    return (this.input_object_references == null) ? null : this.input_object_references.iterator();
  }

  public void addToInput_object_references(String elem) {
    if (this.input_object_references == null) {
      this.input_object_references = new ArrayList<String>();
    }
    this.input_object_references.add(elem);
  }

  public List<String> getInput_object_references() {
    return this.input_object_references;
  }

  public ObjectProvenanceAction setInput_object_references(List<String> input_object_references) {
    this.input_object_references = input_object_references;
    return this;
  }

  public void unsetInput_object_references() {
    this.input_object_references = null;
  }

  /** Returns true if field input_object_references is set (has been assigned a value) and false otherwise */
  public boolean isSetInput_object_references() {
    return this.input_object_references != null;
  }

  public void setInput_object_referencesIsSet(boolean value) {
    if (!value) {
      this.input_object_references = null;
    }
  }

  public int getValidated_object_referencesSize() {
    return (this.validated_object_references == null) ? 0 : this.validated_object_references.size();
  }

  public java.util.Iterator<String> getValidated_object_referencesIterator() {
    return (this.validated_object_references == null) ? null : this.validated_object_references.iterator();
  }

  public void addToValidated_object_references(String elem) {
    if (this.validated_object_references == null) {
      this.validated_object_references = new ArrayList<String>();
    }
    this.validated_object_references.add(elem);
  }

  public List<String> getValidated_object_references() {
    return this.validated_object_references;
  }

  public ObjectProvenanceAction setValidated_object_references(List<String> validated_object_references) {
    this.validated_object_references = validated_object_references;
    return this;
  }

  public void unsetValidated_object_references() {
    this.validated_object_references = null;
  }

  /** Returns true if field validated_object_references is set (has been assigned a value) and false otherwise */
  public boolean isSetValidated_object_references() {
    return this.validated_object_references != null;
  }

  public void setValidated_object_referencesIsSet(boolean value) {
    if (!value) {
      this.validated_object_references = null;
    }
  }

  public int getIntermediate_input_idsSize() {
    return (this.intermediate_input_ids == null) ? 0 : this.intermediate_input_ids.size();
  }

  public java.util.Iterator<String> getIntermediate_input_idsIterator() {
    return (this.intermediate_input_ids == null) ? null : this.intermediate_input_ids.iterator();
  }

  public void addToIntermediate_input_ids(String elem) {
    if (this.intermediate_input_ids == null) {
      this.intermediate_input_ids = new ArrayList<String>();
    }
    this.intermediate_input_ids.add(elem);
  }

  public List<String> getIntermediate_input_ids() {
    return this.intermediate_input_ids;
  }

  public ObjectProvenanceAction setIntermediate_input_ids(List<String> intermediate_input_ids) {
    this.intermediate_input_ids = intermediate_input_ids;
    return this;
  }

  public void unsetIntermediate_input_ids() {
    this.intermediate_input_ids = null;
  }

  /** Returns true if field intermediate_input_ids is set (has been assigned a value) and false otherwise */
  public boolean isSetIntermediate_input_ids() {
    return this.intermediate_input_ids != null;
  }

  public void setIntermediate_input_idsIsSet(boolean value) {
    if (!value) {
      this.intermediate_input_ids = null;
    }
  }

  public int getIntermediate_output_idsSize() {
    return (this.intermediate_output_ids == null) ? 0 : this.intermediate_output_ids.size();
  }

  public java.util.Iterator<String> getIntermediate_output_idsIterator() {
    return (this.intermediate_output_ids == null) ? null : this.intermediate_output_ids.iterator();
  }

  public void addToIntermediate_output_ids(String elem) {
    if (this.intermediate_output_ids == null) {
      this.intermediate_output_ids = new ArrayList<String>();
    }
    this.intermediate_output_ids.add(elem);
  }

  public List<String> getIntermediate_output_ids() {
    return this.intermediate_output_ids;
  }

  public ObjectProvenanceAction setIntermediate_output_ids(List<String> intermediate_output_ids) {
    this.intermediate_output_ids = intermediate_output_ids;
    return this;
  }

  public void unsetIntermediate_output_ids() {
    this.intermediate_output_ids = null;
  }

  /** Returns true if field intermediate_output_ids is set (has been assigned a value) and false otherwise */
  public boolean isSetIntermediate_output_ids() {
    return this.intermediate_output_ids != null;
  }

  public void setIntermediate_output_idsIsSet(boolean value) {
    if (!value) {
      this.intermediate_output_ids = null;
    }
  }

  public int getExternal_dataSize() {
    return (this.external_data == null) ? 0 : this.external_data.size();
  }

  public java.util.Iterator<ExternalDataUnit> getExternal_dataIterator() {
    return (this.external_data == null) ? null : this.external_data.iterator();
  }

  public void addToExternal_data(ExternalDataUnit elem) {
    if (this.external_data == null) {
      this.external_data = new ArrayList<ExternalDataUnit>();
    }
    this.external_data.add(elem);
  }

  public List<ExternalDataUnit> getExternal_data() {
    return this.external_data;
  }

  public ObjectProvenanceAction setExternal_data(List<ExternalDataUnit> external_data) {
    this.external_data = external_data;
    return this;
  }

  public void unsetExternal_data() {
    this.external_data = null;
  }

  /** Returns true if field external_data is set (has been assigned a value) and false otherwise */
  public boolean isSetExternal_data() {
    return this.external_data != null;
  }

  public void setExternal_dataIsSet(boolean value) {
    if (!value) {
      this.external_data = null;
    }
  }

  public String getDescription() {
    return this.description;
  }

  public ObjectProvenanceAction setDescription(String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case TIME:
      if (value == null) {
        unsetTime();
      } else {
        setTime((String)value);
      }
      break;

    case SERVICE_NAME:
      if (value == null) {
        unsetService_name();
      } else {
        setService_name((String)value);
      }
      break;

    case SERVICE_VERSION:
      if (value == null) {
        unsetService_version();
      } else {
        setService_version((String)value);
      }
      break;

    case SERVICE_METHOD:
      if (value == null) {
        unsetService_method();
      } else {
        setService_method((String)value);
      }
      break;

    case METHOD_PARAMETERS:
      if (value == null) {
        unsetMethod_parameters();
      } else {
        setMethod_parameters((List<ByteBuffer>)value);
      }
      break;

    case SCRIPT_NAME:
      if (value == null) {
        unsetScript_name();
      } else {
        setScript_name((String)value);
      }
      break;

    case SCRIPT_VERSION:
      if (value == null) {
        unsetScript_version();
      } else {
        setScript_version((String)value);
      }
      break;

    case SCRIPT_COMMAND_LINE:
      if (value == null) {
        unsetScript_command_line();
      } else {
        setScript_command_line((String)value);
      }
      break;

    case INPUT_OBJECT_REFERENCES:
      if (value == null) {
        unsetInput_object_references();
      } else {
        setInput_object_references((List<String>)value);
      }
      break;

    case VALIDATED_OBJECT_REFERENCES:
      if (value == null) {
        unsetValidated_object_references();
      } else {
        setValidated_object_references((List<String>)value);
      }
      break;

    case INTERMEDIATE_INPUT_IDS:
      if (value == null) {
        unsetIntermediate_input_ids();
      } else {
        setIntermediate_input_ids((List<String>)value);
      }
      break;

    case INTERMEDIATE_OUTPUT_IDS:
      if (value == null) {
        unsetIntermediate_output_ids();
      } else {
        setIntermediate_output_ids((List<String>)value);
      }
      break;

    case EXTERNAL_DATA:
      if (value == null) {
        unsetExternal_data();
      } else {
        setExternal_data((List<ExternalDataUnit>)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case TIME:
      return getTime();

    case SERVICE_NAME:
      return getService_name();

    case SERVICE_VERSION:
      return getService_version();

    case SERVICE_METHOD:
      return getService_method();

    case METHOD_PARAMETERS:
      return getMethod_parameters();

    case SCRIPT_NAME:
      return getScript_name();

    case SCRIPT_VERSION:
      return getScript_version();

    case SCRIPT_COMMAND_LINE:
      return getScript_command_line();

    case INPUT_OBJECT_REFERENCES:
      return getInput_object_references();

    case VALIDATED_OBJECT_REFERENCES:
      return getValidated_object_references();

    case INTERMEDIATE_INPUT_IDS:
      return getIntermediate_input_ids();

    case INTERMEDIATE_OUTPUT_IDS:
      return getIntermediate_output_ids();

    case EXTERNAL_DATA:
      return getExternal_data();

    case DESCRIPTION:
      return getDescription();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case TIME:
      return isSetTime();
    case SERVICE_NAME:
      return isSetService_name();
    case SERVICE_VERSION:
      return isSetService_version();
    case SERVICE_METHOD:
      return isSetService_method();
    case METHOD_PARAMETERS:
      return isSetMethod_parameters();
    case SCRIPT_NAME:
      return isSetScript_name();
    case SCRIPT_VERSION:
      return isSetScript_version();
    case SCRIPT_COMMAND_LINE:
      return isSetScript_command_line();
    case INPUT_OBJECT_REFERENCES:
      return isSetInput_object_references();
    case VALIDATED_OBJECT_REFERENCES:
      return isSetValidated_object_references();
    case INTERMEDIATE_INPUT_IDS:
      return isSetIntermediate_input_ids();
    case INTERMEDIATE_OUTPUT_IDS:
      return isSetIntermediate_output_ids();
    case EXTERNAL_DATA:
      return isSetExternal_data();
    case DESCRIPTION:
      return isSetDescription();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ObjectProvenanceAction)
      return this.equals((ObjectProvenanceAction)that);
    return false;
  }

  public boolean equals(ObjectProvenanceAction that) {
    if (that == null)
      return false;

    boolean this_present_time = true && this.isSetTime();
    boolean that_present_time = true && that.isSetTime();
    if (this_present_time || that_present_time) {
      if (!(this_present_time && that_present_time))
        return false;
      if (!this.time.equals(that.time))
        return false;
    }

    boolean this_present_service_name = true && this.isSetService_name();
    boolean that_present_service_name = true && that.isSetService_name();
    if (this_present_service_name || that_present_service_name) {
      if (!(this_present_service_name && that_present_service_name))
        return false;
      if (!this.service_name.equals(that.service_name))
        return false;
    }

    boolean this_present_service_version = true && this.isSetService_version();
    boolean that_present_service_version = true && that.isSetService_version();
    if (this_present_service_version || that_present_service_version) {
      if (!(this_present_service_version && that_present_service_version))
        return false;
      if (!this.service_version.equals(that.service_version))
        return false;
    }

    boolean this_present_service_method = true && this.isSetService_method();
    boolean that_present_service_method = true && that.isSetService_method();
    if (this_present_service_method || that_present_service_method) {
      if (!(this_present_service_method && that_present_service_method))
        return false;
      if (!this.service_method.equals(that.service_method))
        return false;
    }

    boolean this_present_method_parameters = true && this.isSetMethod_parameters();
    boolean that_present_method_parameters = true && that.isSetMethod_parameters();
    if (this_present_method_parameters || that_present_method_parameters) {
      if (!(this_present_method_parameters && that_present_method_parameters))
        return false;
      if (!this.method_parameters.equals(that.method_parameters))
        return false;
    }

    boolean this_present_script_name = true && this.isSetScript_name();
    boolean that_present_script_name = true && that.isSetScript_name();
    if (this_present_script_name || that_present_script_name) {
      if (!(this_present_script_name && that_present_script_name))
        return false;
      if (!this.script_name.equals(that.script_name))
        return false;
    }

    boolean this_present_script_version = true && this.isSetScript_version();
    boolean that_present_script_version = true && that.isSetScript_version();
    if (this_present_script_version || that_present_script_version) {
      if (!(this_present_script_version && that_present_script_version))
        return false;
      if (!this.script_version.equals(that.script_version))
        return false;
    }

    boolean this_present_script_command_line = true && this.isSetScript_command_line();
    boolean that_present_script_command_line = true && that.isSetScript_command_line();
    if (this_present_script_command_line || that_present_script_command_line) {
      if (!(this_present_script_command_line && that_present_script_command_line))
        return false;
      if (!this.script_command_line.equals(that.script_command_line))
        return false;
    }

    boolean this_present_input_object_references = true && this.isSetInput_object_references();
    boolean that_present_input_object_references = true && that.isSetInput_object_references();
    if (this_present_input_object_references || that_present_input_object_references) {
      if (!(this_present_input_object_references && that_present_input_object_references))
        return false;
      if (!this.input_object_references.equals(that.input_object_references))
        return false;
    }

    boolean this_present_validated_object_references = true && this.isSetValidated_object_references();
    boolean that_present_validated_object_references = true && that.isSetValidated_object_references();
    if (this_present_validated_object_references || that_present_validated_object_references) {
      if (!(this_present_validated_object_references && that_present_validated_object_references))
        return false;
      if (!this.validated_object_references.equals(that.validated_object_references))
        return false;
    }

    boolean this_present_intermediate_input_ids = true && this.isSetIntermediate_input_ids();
    boolean that_present_intermediate_input_ids = true && that.isSetIntermediate_input_ids();
    if (this_present_intermediate_input_ids || that_present_intermediate_input_ids) {
      if (!(this_present_intermediate_input_ids && that_present_intermediate_input_ids))
        return false;
      if (!this.intermediate_input_ids.equals(that.intermediate_input_ids))
        return false;
    }

    boolean this_present_intermediate_output_ids = true && this.isSetIntermediate_output_ids();
    boolean that_present_intermediate_output_ids = true && that.isSetIntermediate_output_ids();
    if (this_present_intermediate_output_ids || that_present_intermediate_output_ids) {
      if (!(this_present_intermediate_output_ids && that_present_intermediate_output_ids))
        return false;
      if (!this.intermediate_output_ids.equals(that.intermediate_output_ids))
        return false;
    }

    boolean this_present_external_data = true && this.isSetExternal_data();
    boolean that_present_external_data = true && that.isSetExternal_data();
    if (this_present_external_data || that_present_external_data) {
      if (!(this_present_external_data && that_present_external_data))
        return false;
      if (!this.external_data.equals(that.external_data))
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_time = true && (isSetTime());
    list.add(present_time);
    if (present_time)
      list.add(time);

    boolean present_service_name = true && (isSetService_name());
    list.add(present_service_name);
    if (present_service_name)
      list.add(service_name);

    boolean present_service_version = true && (isSetService_version());
    list.add(present_service_version);
    if (present_service_version)
      list.add(service_version);

    boolean present_service_method = true && (isSetService_method());
    list.add(present_service_method);
    if (present_service_method)
      list.add(service_method);

    boolean present_method_parameters = true && (isSetMethod_parameters());
    list.add(present_method_parameters);
    if (present_method_parameters)
      list.add(method_parameters);

    boolean present_script_name = true && (isSetScript_name());
    list.add(present_script_name);
    if (present_script_name)
      list.add(script_name);

    boolean present_script_version = true && (isSetScript_version());
    list.add(present_script_version);
    if (present_script_version)
      list.add(script_version);

    boolean present_script_command_line = true && (isSetScript_command_line());
    list.add(present_script_command_line);
    if (present_script_command_line)
      list.add(script_command_line);

    boolean present_input_object_references = true && (isSetInput_object_references());
    list.add(present_input_object_references);
    if (present_input_object_references)
      list.add(input_object_references);

    boolean present_validated_object_references = true && (isSetValidated_object_references());
    list.add(present_validated_object_references);
    if (present_validated_object_references)
      list.add(validated_object_references);

    boolean present_intermediate_input_ids = true && (isSetIntermediate_input_ids());
    list.add(present_intermediate_input_ids);
    if (present_intermediate_input_ids)
      list.add(intermediate_input_ids);

    boolean present_intermediate_output_ids = true && (isSetIntermediate_output_ids());
    list.add(present_intermediate_output_ids);
    if (present_intermediate_output_ids)
      list.add(intermediate_output_ids);

    boolean present_external_data = true && (isSetExternal_data());
    list.add(present_external_data);
    if (present_external_data)
      list.add(external_data);

    boolean present_description = true && (isSetDescription());
    list.add(present_description);
    if (present_description)
      list.add(description);

    return list.hashCode();
  }

  @Override
  public int compareTo(ObjectProvenanceAction other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetTime()).compareTo(other.isSetTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.time, other.time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetService_name()).compareTo(other.isSetService_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetService_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.service_name, other.service_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetService_version()).compareTo(other.isSetService_version());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetService_version()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.service_version, other.service_version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetService_method()).compareTo(other.isSetService_method());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetService_method()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.service_method, other.service_method);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMethod_parameters()).compareTo(other.isSetMethod_parameters());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMethod_parameters()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.method_parameters, other.method_parameters);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetScript_name()).compareTo(other.isSetScript_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetScript_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.script_name, other.script_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetScript_version()).compareTo(other.isSetScript_version());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetScript_version()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.script_version, other.script_version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetScript_command_line()).compareTo(other.isSetScript_command_line());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetScript_command_line()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.script_command_line, other.script_command_line);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInput_object_references()).compareTo(other.isSetInput_object_references());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInput_object_references()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.input_object_references, other.input_object_references);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetValidated_object_references()).compareTo(other.isSetValidated_object_references());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetValidated_object_references()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.validated_object_references, other.validated_object_references);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIntermediate_input_ids()).compareTo(other.isSetIntermediate_input_ids());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntermediate_input_ids()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.intermediate_input_ids, other.intermediate_input_ids);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIntermediate_output_ids()).compareTo(other.isSetIntermediate_output_ids());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIntermediate_output_ids()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.intermediate_output_ids, other.intermediate_output_ids);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExternal_data()).compareTo(other.isSetExternal_data());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExternal_data()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.external_data, other.external_data);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ObjectProvenanceAction(");
    boolean first = true;

    sb.append("time:");
    if (this.time == null) {
      sb.append("null");
    } else {
      sb.append(this.time);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("service_name:");
    if (this.service_name == null) {
      sb.append("null");
    } else {
      sb.append(this.service_name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("service_version:");
    if (this.service_version == null) {
      sb.append("null");
    } else {
      sb.append(this.service_version);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("service_method:");
    if (this.service_method == null) {
      sb.append("null");
    } else {
      sb.append(this.service_method);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("method_parameters:");
    if (this.method_parameters == null) {
      sb.append("null");
    } else {
      sb.append(this.method_parameters);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("script_name:");
    if (this.script_name == null) {
      sb.append("null");
    } else {
      sb.append(this.script_name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("script_version:");
    if (this.script_version == null) {
      sb.append("null");
    } else {
      sb.append(this.script_version);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("script_command_line:");
    if (this.script_command_line == null) {
      sb.append("null");
    } else {
      sb.append(this.script_command_line);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("input_object_references:");
    if (this.input_object_references == null) {
      sb.append("null");
    } else {
      sb.append(this.input_object_references);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("validated_object_references:");
    if (this.validated_object_references == null) {
      sb.append("null");
    } else {
      sb.append(this.validated_object_references);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("intermediate_input_ids:");
    if (this.intermediate_input_ids == null) {
      sb.append("null");
    } else {
      sb.append(this.intermediate_input_ids);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("intermediate_output_ids:");
    if (this.intermediate_output_ids == null) {
      sb.append("null");
    } else {
      sb.append(this.intermediate_output_ids);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("external_data:");
    if (this.external_data == null) {
      sb.append("null");
    } else {
      sb.append(this.external_data);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("description:");
    if (this.description == null) {
      sb.append("null");
    } else {
      sb.append(this.description);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ObjectProvenanceActionStandardSchemeFactory implements SchemeFactory {
    public ObjectProvenanceActionStandardScheme getScheme() {
      return new ObjectProvenanceActionStandardScheme();
    }
  }

  private static class ObjectProvenanceActionStandardScheme extends StandardScheme<ObjectProvenanceAction> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ObjectProvenanceAction struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.time = iprot.readString();
              struct.setTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SERVICE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.service_name = iprot.readString();
              struct.setService_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SERVICE_VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.service_version = iprot.readString();
              struct.setService_versionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // SERVICE_METHOD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.service_method = iprot.readString();
              struct.setService_methodIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // METHOD_PARAMETERS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list28 = iprot.readListBegin();
                struct.method_parameters = new ArrayList<ByteBuffer>(_list28.size);
                ByteBuffer _elem29;
                for (int _i30 = 0; _i30 < _list28.size; ++_i30)
                {
                  _elem29 = iprot.readBinary();
                  struct.method_parameters.add(_elem29);
                }
                iprot.readListEnd();
              }
              struct.setMethod_parametersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SCRIPT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.script_name = iprot.readString();
              struct.setScript_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SCRIPT_VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.script_version = iprot.readString();
              struct.setScript_versionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // SCRIPT_COMMAND_LINE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.script_command_line = iprot.readString();
              struct.setScript_command_lineIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // INPUT_OBJECT_REFERENCES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list31 = iprot.readListBegin();
                struct.input_object_references = new ArrayList<String>(_list31.size);
                String _elem32;
                for (int _i33 = 0; _i33 < _list31.size; ++_i33)
                {
                  _elem32 = iprot.readString();
                  struct.input_object_references.add(_elem32);
                }
                iprot.readListEnd();
              }
              struct.setInput_object_referencesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // VALIDATED_OBJECT_REFERENCES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list34 = iprot.readListBegin();
                struct.validated_object_references = new ArrayList<String>(_list34.size);
                String _elem35;
                for (int _i36 = 0; _i36 < _list34.size; ++_i36)
                {
                  _elem35 = iprot.readString();
                  struct.validated_object_references.add(_elem35);
                }
                iprot.readListEnd();
              }
              struct.setValidated_object_referencesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // INTERMEDIATE_INPUT_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list37 = iprot.readListBegin();
                struct.intermediate_input_ids = new ArrayList<String>(_list37.size);
                String _elem38;
                for (int _i39 = 0; _i39 < _list37.size; ++_i39)
                {
                  _elem38 = iprot.readString();
                  struct.intermediate_input_ids.add(_elem38);
                }
                iprot.readListEnd();
              }
              struct.setIntermediate_input_idsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // INTERMEDIATE_OUTPUT_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list40 = iprot.readListBegin();
                struct.intermediate_output_ids = new ArrayList<String>(_list40.size);
                String _elem41;
                for (int _i42 = 0; _i42 < _list40.size; ++_i42)
                {
                  _elem41 = iprot.readString();
                  struct.intermediate_output_ids.add(_elem41);
                }
                iprot.readListEnd();
              }
              struct.setIntermediate_output_idsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // EXTERNAL_DATA
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list43 = iprot.readListBegin();
                struct.external_data = new ArrayList<ExternalDataUnit>(_list43.size);
                ExternalDataUnit _elem44;
                for (int _i45 = 0; _i45 < _list43.size; ++_i45)
                {
                  _elem44 = new ExternalDataUnit();
                  _elem44.read(iprot);
                  struct.external_data.add(_elem44);
                }
                iprot.readListEnd();
              }
              struct.setExternal_dataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ObjectProvenanceAction struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.time != null) {
        oprot.writeFieldBegin(TIME_FIELD_DESC);
        oprot.writeString(struct.time);
        oprot.writeFieldEnd();
      }
      if (struct.service_name != null) {
        oprot.writeFieldBegin(SERVICE_NAME_FIELD_DESC);
        oprot.writeString(struct.service_name);
        oprot.writeFieldEnd();
      }
      if (struct.service_version != null) {
        oprot.writeFieldBegin(SERVICE_VERSION_FIELD_DESC);
        oprot.writeString(struct.service_version);
        oprot.writeFieldEnd();
      }
      if (struct.service_method != null) {
        oprot.writeFieldBegin(SERVICE_METHOD_FIELD_DESC);
        oprot.writeString(struct.service_method);
        oprot.writeFieldEnd();
      }
      if (struct.method_parameters != null) {
        oprot.writeFieldBegin(METHOD_PARAMETERS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.method_parameters.size()));
          for (ByteBuffer _iter46 : struct.method_parameters)
          {
            oprot.writeBinary(_iter46);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.script_name != null) {
        oprot.writeFieldBegin(SCRIPT_NAME_FIELD_DESC);
        oprot.writeString(struct.script_name);
        oprot.writeFieldEnd();
      }
      if (struct.script_version != null) {
        oprot.writeFieldBegin(SCRIPT_VERSION_FIELD_DESC);
        oprot.writeString(struct.script_version);
        oprot.writeFieldEnd();
      }
      if (struct.script_command_line != null) {
        oprot.writeFieldBegin(SCRIPT_COMMAND_LINE_FIELD_DESC);
        oprot.writeString(struct.script_command_line);
        oprot.writeFieldEnd();
      }
      if (struct.input_object_references != null) {
        oprot.writeFieldBegin(INPUT_OBJECT_REFERENCES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.input_object_references.size()));
          for (String _iter47 : struct.input_object_references)
          {
            oprot.writeString(_iter47);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.validated_object_references != null) {
        oprot.writeFieldBegin(VALIDATED_OBJECT_REFERENCES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.validated_object_references.size()));
          for (String _iter48 : struct.validated_object_references)
          {
            oprot.writeString(_iter48);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.intermediate_input_ids != null) {
        oprot.writeFieldBegin(INTERMEDIATE_INPUT_IDS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.intermediate_input_ids.size()));
          for (String _iter49 : struct.intermediate_input_ids)
          {
            oprot.writeString(_iter49);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.intermediate_output_ids != null) {
        oprot.writeFieldBegin(INTERMEDIATE_OUTPUT_IDS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.intermediate_output_ids.size()));
          for (String _iter50 : struct.intermediate_output_ids)
          {
            oprot.writeString(_iter50);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.external_data != null) {
        oprot.writeFieldBegin(EXTERNAL_DATA_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.external_data.size()));
          for (ExternalDataUnit _iter51 : struct.external_data)
          {
            _iter51.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.description != null) {
        oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
        oprot.writeString(struct.description);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ObjectProvenanceActionTupleSchemeFactory implements SchemeFactory {
    public ObjectProvenanceActionTupleScheme getScheme() {
      return new ObjectProvenanceActionTupleScheme();
    }
  }

  private static class ObjectProvenanceActionTupleScheme extends TupleScheme<ObjectProvenanceAction> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ObjectProvenanceAction struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetTime()) {
        optionals.set(0);
      }
      if (struct.isSetService_name()) {
        optionals.set(1);
      }
      if (struct.isSetService_version()) {
        optionals.set(2);
      }
      if (struct.isSetService_method()) {
        optionals.set(3);
      }
      if (struct.isSetMethod_parameters()) {
        optionals.set(4);
      }
      if (struct.isSetScript_name()) {
        optionals.set(5);
      }
      if (struct.isSetScript_version()) {
        optionals.set(6);
      }
      if (struct.isSetScript_command_line()) {
        optionals.set(7);
      }
      if (struct.isSetInput_object_references()) {
        optionals.set(8);
      }
      if (struct.isSetValidated_object_references()) {
        optionals.set(9);
      }
      if (struct.isSetIntermediate_input_ids()) {
        optionals.set(10);
      }
      if (struct.isSetIntermediate_output_ids()) {
        optionals.set(11);
      }
      if (struct.isSetExternal_data()) {
        optionals.set(12);
      }
      if (struct.isSetDescription()) {
        optionals.set(13);
      }
      oprot.writeBitSet(optionals, 14);
      if (struct.isSetTime()) {
        oprot.writeString(struct.time);
      }
      if (struct.isSetService_name()) {
        oprot.writeString(struct.service_name);
      }
      if (struct.isSetService_version()) {
        oprot.writeString(struct.service_version);
      }
      if (struct.isSetService_method()) {
        oprot.writeString(struct.service_method);
      }
      if (struct.isSetMethod_parameters()) {
        {
          oprot.writeI32(struct.method_parameters.size());
          for (ByteBuffer _iter52 : struct.method_parameters)
          {
            oprot.writeBinary(_iter52);
          }
        }
      }
      if (struct.isSetScript_name()) {
        oprot.writeString(struct.script_name);
      }
      if (struct.isSetScript_version()) {
        oprot.writeString(struct.script_version);
      }
      if (struct.isSetScript_command_line()) {
        oprot.writeString(struct.script_command_line);
      }
      if (struct.isSetInput_object_references()) {
        {
          oprot.writeI32(struct.input_object_references.size());
          for (String _iter53 : struct.input_object_references)
          {
            oprot.writeString(_iter53);
          }
        }
      }
      if (struct.isSetValidated_object_references()) {
        {
          oprot.writeI32(struct.validated_object_references.size());
          for (String _iter54 : struct.validated_object_references)
          {
            oprot.writeString(_iter54);
          }
        }
      }
      if (struct.isSetIntermediate_input_ids()) {
        {
          oprot.writeI32(struct.intermediate_input_ids.size());
          for (String _iter55 : struct.intermediate_input_ids)
          {
            oprot.writeString(_iter55);
          }
        }
      }
      if (struct.isSetIntermediate_output_ids()) {
        {
          oprot.writeI32(struct.intermediate_output_ids.size());
          for (String _iter56 : struct.intermediate_output_ids)
          {
            oprot.writeString(_iter56);
          }
        }
      }
      if (struct.isSetExternal_data()) {
        {
          oprot.writeI32(struct.external_data.size());
          for (ExternalDataUnit _iter57 : struct.external_data)
          {
            _iter57.write(oprot);
          }
        }
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ObjectProvenanceAction struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(14);
      if (incoming.get(0)) {
        struct.time = iprot.readString();
        struct.setTimeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.service_name = iprot.readString();
        struct.setService_nameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.service_version = iprot.readString();
        struct.setService_versionIsSet(true);
      }
      if (incoming.get(3)) {
        struct.service_method = iprot.readString();
        struct.setService_methodIsSet(true);
      }
      if (incoming.get(4)) {
        {
          org.apache.thrift.protocol.TList _list58 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.method_parameters = new ArrayList<ByteBuffer>(_list58.size);
          ByteBuffer _elem59;
          for (int _i60 = 0; _i60 < _list58.size; ++_i60)
          {
            _elem59 = iprot.readBinary();
            struct.method_parameters.add(_elem59);
          }
        }
        struct.setMethod_parametersIsSet(true);
      }
      if (incoming.get(5)) {
        struct.script_name = iprot.readString();
        struct.setScript_nameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.script_version = iprot.readString();
        struct.setScript_versionIsSet(true);
      }
      if (incoming.get(7)) {
        struct.script_command_line = iprot.readString();
        struct.setScript_command_lineIsSet(true);
      }
      if (incoming.get(8)) {
        {
          org.apache.thrift.protocol.TList _list61 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.input_object_references = new ArrayList<String>(_list61.size);
          String _elem62;
          for (int _i63 = 0; _i63 < _list61.size; ++_i63)
          {
            _elem62 = iprot.readString();
            struct.input_object_references.add(_elem62);
          }
        }
        struct.setInput_object_referencesIsSet(true);
      }
      if (incoming.get(9)) {
        {
          org.apache.thrift.protocol.TList _list64 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.validated_object_references = new ArrayList<String>(_list64.size);
          String _elem65;
          for (int _i66 = 0; _i66 < _list64.size; ++_i66)
          {
            _elem65 = iprot.readString();
            struct.validated_object_references.add(_elem65);
          }
        }
        struct.setValidated_object_referencesIsSet(true);
      }
      if (incoming.get(10)) {
        {
          org.apache.thrift.protocol.TList _list67 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.intermediate_input_ids = new ArrayList<String>(_list67.size);
          String _elem68;
          for (int _i69 = 0; _i69 < _list67.size; ++_i69)
          {
            _elem68 = iprot.readString();
            struct.intermediate_input_ids.add(_elem68);
          }
        }
        struct.setIntermediate_input_idsIsSet(true);
      }
      if (incoming.get(11)) {
        {
          org.apache.thrift.protocol.TList _list70 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.intermediate_output_ids = new ArrayList<String>(_list70.size);
          String _elem71;
          for (int _i72 = 0; _i72 < _list70.size; ++_i72)
          {
            _elem71 = iprot.readString();
            struct.intermediate_output_ids.add(_elem71);
          }
        }
        struct.setIntermediate_output_idsIsSet(true);
      }
      if (incoming.get(12)) {
        {
          org.apache.thrift.protocol.TList _list73 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.external_data = new ArrayList<ExternalDataUnit>(_list73.size);
          ExternalDataUnit _elem74;
          for (int _i75 = 0; _i75 < _list73.size; ++_i75)
          {
            _elem74 = new ExternalDataUnit();
            _elem74.read(iprot);
            struct.external_data.add(_elem74);
          }
        }
        struct.setExternal_dataIsSet(true);
      }
      if (incoming.get(13)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
    }
  }

}

